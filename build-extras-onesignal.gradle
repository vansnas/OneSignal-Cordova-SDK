android.defaultConfig {
  manifestPlaceholders = [
    onesignal_app_id: '', // Use from js code
    onesignal_google_project_number: 'REMOTE'
  ]
}

android {
    configurations {
        all*.exclude group: 'com.onesignal', module: 'onesignal'
    }
}

repositories {
    maven { url 'https://maven.google.com' }
    repositories {
        maven { url 'https://pkgs.dev.azure.com/OutSystemsRD/9e79bc5b-69b2-4476-9ca5-d67594972a52/_packaging/PublicArtifactRepository/maven/v1' }
    }
}

// ## Align gms and support group versions on all dependencies

def versionGroupAligns = [
    // ### Google Play Services library
    //'com.google.android.gms': [
    //    'version': '11.8.+',
    //    'omitModules': ['strict-version-matcher-plugin']
    //],

    // ### Google Firebase library
    // Although not used by OneSignal Firebase has some dependencies on gms
    // If present, ensuring they are aligned
    //'com.google.firebase': [
    //    'version': '11.8.+'
    //],

    // ### Android Support Library
    'com.android.support': [
        'requiredCompileSdkVersion': 28,
        'version': '28.0.0',
        'omitModules': ['multidex', 'multidex-instrumentation'],

        // Can't use 26 of com.android.support when compileSdkVersion 25 is set
        // The following error will be thrown if there is a mismatch here.
        // "No resource found that matches the given name: attr 'android:keyboardNavigationCluster'"
        'versionFallback': '26.1.+'
    ]
]

def resolveVersion(def versionOverride) {
    def curCompileSdkVersion = android.compileSdkVersion.split('-')[1].toInteger()
    def requiredCompileSdk = versionOverride['requiredCompileSdkVersion']
    if (curCompileSdkVersion < requiredCompileSdk)
        return versionOverride['versionFallback']
    return versionOverride['version']
}

configurations.all { resolutionStrategy {

    // Enable to find root causes of any remaining version mismatches
    // failOnVersionConflict()

    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def versionOverride = versionGroupAligns[details.requested.group]
        if (!versionOverride)
            return

        def omitModules = versionOverride['omitModules']
        if (omitModules && omitModules.contains(details.requested.name))
            return

        details.useVersion(resolveVersion(versionOverride))
    }
}}

dependencies {
  implementation("com.github.outsystems:onesignal-android-sdk:4.8.0") // Latest version
  implementation 'com.google.android.gms:play-services-location:21.0.1' // Updated to latest
  implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0' // Updated to latest
  implementation 'com.google.android.gms:play-services-base:18.1.0' // Updated to latest
  implementation 'com.google.android.gms:play-services-basement:18.0.0' // Updated to latest
  implementation 'com.google.android.gms:play-services-tasks:18.0.1' // Updated to latest
  implementation 'com.google.android.gms:play-services-stats:17.0.0' // Updated to latest
  api 'com.google.firebase:firebase-messaging:23.1.0' // Updated to latest
}
